Here is an example of an Ansible playbook that you can use to execute the `oc exec` command to check the health of the Elasticsearch pod and filter the output to retrieve the number of pending tasks:

```yaml
---
- name: Check Number of Pending Tasks in Elasticsearch Health
  hosts: localhost
  tasks:
    - name: Run the oc exec command to get Elasticsearch health information
      command: oc exec -n openshift-logging -c elasticsearch {{ lookup('env', 'ES_POD_NAME') }} -- health
      register: health_output

    - name: Filter the output to retrieve the number of pending tasks
      shell: |
        echo "{{ health_output.stdout_lines }}" | grep number_of_pending_tasks
```

You can save this playbook as a YAML file and execute it using the `ansible-playbook` command in your Ansible environment. This playbook will run the `oc exec` command with the `ES_POD_NAME` environment variable to check the health of the Elasticsearch pod and filter the output to extract the number of pending tasks.