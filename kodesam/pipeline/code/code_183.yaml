To create an Ansible container, you can use a Dockerfile. Here's an example of a Dockerfile that sets up an Ansible container:

```Dockerfile
# Use an official Python runtime as the base image
FROM python:3.9-slim

# Set the working directory inside the container
WORKDIR /ansible

# Install Ansible and other dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        openssh-client \
        sshpass \
        git \
    && pip install ansible \
    && rm -rf /var/lib/apt/lists/*

# Copy the Ansible playbooks and inventory files to the working directory
COPY . /ansible

# Set the entrypoint to run Ansible commands
ENTRYPOINT ["ansible-playbook"]
```

In this Dockerfile:
1. We use the official Python 3.9-slim base image.
2. We set the working directory inside the container to `/ansible`.
3. We install the necessary dependencies (`openssh-client`, `sshpass`, and `git`).
4. We install Ansible using pip.
5. We copy the Ansible playbooks and inventory files from the current directory (where the Dockerfile resides) to `/ansible` inside the container.
6. We set the entrypoint to `ansible-playbook` so that when the container starts, it will run Ansible commands.

To build the Ansible container, navigate to the directory containing the Dockerfile and run the following command:

```
docker build -t ansible-container .
```

This will build the Docker image with the tag "ansible-container".

Once the image is built, you can run the Ansible container using the following command:

```
docker run -it --rm ansible-container <playbook.yml>
```

Replace `<playbook.yml>` with the actual path to your Ansible playbook file.

Note: Make sure you have your Ansible playbooks and inventory files in the same directory as the Dockerfile, or update the `COPY` instruction in the Dockerfile accordingly to match the correct paths.