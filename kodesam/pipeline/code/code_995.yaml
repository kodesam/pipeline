To generate a Dockerfile for an SQL database container, you can follow these steps:

1. Start by creating a new file called "Dockerfile" in a directory of your choice.

2. In the Dockerfile, start with the base image. For an SQL database, you can use an image like "mysql" or "microsoft/mssql-server" depending on your preference. For example, to use the "mysql" image:

```
FROM mysql:latest
```

3. Next, specify any additional environment variables or configuration options needed for your SQL database. This can include setting the root password, database name, or other options. For example:

```
ENV MYSQL_ROOT_PASSWORD=mysecretpassword
ENV MYSQL_DATABASE=mydatabase
```

4. Optionally, you can copy any initialization scripts or data files from your local machine to the container. This can be done using the `COPY` command. For example, if you have a SQL script called "init.sql" in the same directory as your Dockerfile:

```
COPY init.sql /docker-entrypoint-initdb.d/
```

This line will copy the "init.sql" file to the "/docker-entrypoint-initdb.d/" directory inside the container, which is the location where MySQL will look for initialization scripts.

5. Finally, expose the necessary port for your SQL database. Depending on the database you are using, this could be port 3306 for MySQL or a different port for other databases. Use the `EXPOSE` command to specify the port. For example:

```
EXPOSE 3306
```

6. Save the Dockerfile.

You can now build your container image using the Dockerfile:

```
docker build -t my-sql-container .
```

Replace "my-sql-container" with a name of your choice for the container image.

Once the image is built, you can run a container based on this image using the `docker run` command, providing any additional configuration or command needed for your specific SQL database.

Note: This is a general approach, and the specific steps may vary depending on the SQL database and image you choose to use. Please refer to the documentation of the specific database image for any additional steps or configuration options needed.