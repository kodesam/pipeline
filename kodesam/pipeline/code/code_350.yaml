To create a Dockerfile for a Jenkins container, you can use the following example:

```Dockerfile
FROM jenkins/jenkins:lts

# Skip initial setup wizard
ENV JAVA_OPTS="-Djenkins.install.runSetupWizard=false"

# Install necessary plugins
COPY plugins.txt /usr/share/jenkins/ref/plugins.txt
RUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt

# Configure Jenkins settings
COPY config.xml /var/jenkins_home/
COPY credentials.xml /var/jenkins_home/

# Set permissions
USER root
RUN chown -R jenkins:jenkins /var/jenkins_home/

# Copy Jenkins job files
COPY jobs/ /var/jenkins_home/jobs/

# Expose the Jenkins web interface
EXPOSE 8080

# Run Jenkins
USER jenkins
```

Here's a breakdown of what the Dockerfile does:

1. Uses the `jenkins/jenkins:lts` base image, which provides a Jenkins installation.
2. Sets an environment variable `JAVA_OPTS` to skip the initial setup wizard for Jenkins.
3. Copies the list of required Jenkins plugins from `plugins.txt` and installs them using the `install-plugins.sh` script provided by Jenkins.
4. Copies custom configuration files `config.xml` and `credentials.xml` to override default Jenkins settings.
5. Sets the correct ownership of the Jenkins home directory.
6. Copies the Jenkins job files from the `jobs/` directory to the Jenkins home directory.
7. Exposes port 8080, which is the default port for the Jenkins web interface.
8. Sets the user to `jenkins` for running the Jenkins process.

To build the Docker image, save the Dockerfile content mentioned above into a file named `Dockerfile`. Then, from the command line, navigate to the directory containing the Dockerfile and run the following command:

```
docker build -t jenkins-container .
```

This command will build the Docker image with the tag `jenkins-container`. You can replace `jenkins-container` with any name you prefer.

Finally, you can run the container based on the image with the following command:

```
docker run -p 8080:8080 -d jenkins-container
```

This will start the Jenkins container and bind it to port 8080 on your host machine. You can access the Jenkins web interface by opening a web browser and navigating to `http://localhost:8080`.

Remember to customize the Dockerfile and add any additional plugins, configurations, or job files specific to your Jenkins setup.