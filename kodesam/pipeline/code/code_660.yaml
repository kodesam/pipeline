To create a web application pod with a namespace, deployment, secrets, configmap, service, and route, you can use the following Kubernetes YAML file.

```yaml
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ deployment }}
  namespace: {{ namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ deployment }}
  template:
    metadata:
      labels:
        app: {{ deployment }}
    spec:
      containers:
        - name: {{ deployment }}
          image: your-image:tag
          ports:
            - containerPort: 80

---
# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: {{ secrets }}
  namespace: {{ namespace }}
data:
  # Add secret data here

---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ configmap }}
  namespace: {{ namespace }}
data:
  # Add config data here

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: {{ service }}
  namespace: {{ namespace }}
spec:
  selector:
    app: {{ deployment }}
  ports:
    - port: 80
      targetPort: 80

---
# Route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ route }}
  namespace: {{ namespace }}
spec:
  to:
    name: {{ service }}
  port:
    targetPort: 80
```

You can replace the placeholders like `{{ namespace }}, {{ deployment }}, {{ secrets }}, {{ configmap }}, {{ service }}, {{ route }}` with the desired values.

Remember to replace `your-image:tag` in the Deployment section with your actual container image and tag.

This YAML file can be applied to your Kubernetes cluster using the `kubectl apply -f filename.yaml` command.