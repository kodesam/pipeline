Certainly! Here's an example of a Dockerfile you can use to create an Ansible container:

```Dockerfile
FROM python:3.9-slim

# Install Ansible
RUN pip3 install ansible

# Set up working directory
WORKDIR /ansible

# Copy Ansible configuration files
COPY ansible.cfg /etc/ansible/ansible.cfg

# Copy Ansible playbooks
COPY playbook.yml .

# Run Ansible playbook
CMD ["ansible-playbook", "playbook.yml"]
```

This Dockerfile uses the official Python 3.9 slim base image, installs Ansible using pip, sets the working directory to `/ansible`, and copies the Ansible configuration files (`ansible.cfg`) and playbook (`playbook.yml`) into the container. Finally, it runs the `ansible-playbook` command with the specified playbook as the default command when the container starts.

To build the Docker image, navigate to the directory containing the Dockerfile and run the following command:

```bash
docker build -t ansible-container .
```

Replace `ansible-container` with the desired image name. Once the image is built, you can start a container from it using:

```bash
docker run -it ansible-container
```

This will start the container and drop you into an interactive shell where you can execute Ansible commands and run the playbook.

Note: Make sure to update the Dockerfile with any additional dependencies or configurations specific to your Ansible setup.