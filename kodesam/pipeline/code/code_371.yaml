To deploy a Kubernetes cluster on bare metal, you can use various tools such as kubespray, Kubeadm, or Rancher. One popular option is using Kubeadm, which is an official tool for creating and managing a Kubernetes cluster. Here's a high-level overview of the steps you can follow:

1. Set up the bare metal servers:
   Ensure that you have a set of dedicated servers or virtual machines that meet the minimum system requirements for running Kubernetes. Each server should have a compatible Linux OS installed, such as CentOS, Ubuntu, or Red Hat.

2. Install Docker:
   You'll need to install Docker on each server to containerize your applications. Follow the official Docker installation guide for your Linux distribution.

3. Install Kubeadm, Kubectl, and Kubelet:
   These are the essential components of Kubernetes that you'll need on each server. Follow the official Kubernetes documentation to install these components.

4. Initialize the master node:
   On the designated master node, run the `kubeadm init` command to initialize the cluster. This command generates a unique token that other nodes can use to join the cluster.

5. Configure networking:
   Decide on a networking solution for your cluster, such as Calico or Flannel. Follow the documentation for your chosen networking solution to install and configure it on the master and worker nodes.

6. Join worker nodes:
   On each worker node, use the token generated during step 4 to join the cluster using the `kubeadm join` command.

7. Test the cluster:
   Verify that the cluster is up and running by running `kubectl get nodes` on the master node. You should see all the nodes in the cluster.

8. Deploy applications:
   With the cluster set up, you can deploy your applications using manifests or Helm charts. Use `kubectl apply` to deploy your desired workloads and services.

Remember to check the specific documentation and guides for the tools you're using to deploy a Kubernetes cluster on bare metal, as the steps may vary slightly depending on the chosen approach.