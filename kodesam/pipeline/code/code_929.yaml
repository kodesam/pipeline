To create a Dockerfile for an Ansible container, you can use the following example:

```
FROM ubuntu:latest

# Install dependencies
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    apt-add-repository --yes --update ppa:ansible/ansible && \
    apt-get install -y ansible

# Set working directory
WORKDIR /ansible

# Copy the playbook and inventory file to the container
COPY playbook.yml .
COPY inventory .

# Run the playbook
CMD ["ansible-playbook", "playbook.yml", "-i", "inventory"]
```

Here's a breakdown of what the Dockerfile does:

1. Uses the `ubuntu:latest` base image.
2. Updates the package manager and installs the necessary dependencies, including the Ansible software.
3. Sets the working directory inside the container to `/ansible`.
4. Copies the `playbook.yml` file and `inventory` file from the host machine to the container, placing them in the `/ansible` directory.
5. Specifies the command to run when the container is started, which is the `ansible-playbook` command with the `playbook.yml` file and `inventory` file as arguments.

To build the Docker image, save the Dockerfile with the content above, navigate to the directory containing the Dockerfile in the command line, and run the following command:

```
docker build -t ansible-container .
```

This command will build the Docker image with the tag `ansible-container`. You can replace `ansible-container` with any name you prefer.

Finally, to run a container based on the image, use the following command:

```
docker run -it ansible-container
```

This will execute the Ansible playbook inside the container. Make sure you have your `playbook.yml` and `inventory` files in the same directory as the Dockerfile.

Remember to customize the Dockerfile and add any additional dependencies or configurations as needed for your specific Ansible setup.